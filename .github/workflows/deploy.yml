name: BuildDeploy

on:
    push:
        branches:
            - v2/master

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build and Deploy

        steps:
            - name: Set env vars (common)
              run: |
                  echo "REMOTE_APP_FOLDER=~/apps/siop-tools" >> $GITHUB_ENV
                  echo "REMOTE_APP_NAME=sioptoolsapp" >> $GITHUB_ENV

            - name: Set env vars (prod)
              if: endsWith(github.ref, '/v2/master')
              run: |
                  echo "REMOTE_APP_PORT=6002" >> $GITHUB_ENV
                  echo "REMOTE_APP_ENV=prod" >> $GITHUB_ENV
                  echo "REMOTE_HOST="${{ secrets.SSH_HOST_PROD }} >> $GITHUB_ENV

            - name: Checkout code
              uses: actions/checkout@v2

            - name: Compress codebase
              run: |
                  tar -zcvf project.tar.gz ./*

            - name: Copy project to server
              uses: nogsantos/scp-deploy@master
              with:
                  src: ./project.tar.gz
                  host: ${{ env.REMOTE_HOST }}
                  remote: ${{ env.REMOTE_APP_FOLDER }}/${{ env.REMOTE_APP_ENV }}
                  port: ${{ secrets.SSH_PORT }}
                  user: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}

            - name: SSH Decompress and Build
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ env.REMOTE_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      cd ${{ env.REMOTE_APP_FOLDER }}/${{ env.REMOTE_APP_ENV }}
                      tar xvzf ./project.tar.gz --directory ./
                      rm ./project.tar.gz
                      yarn
                      yarn build

            - name: Run App
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ env.REMOTE_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      cd ${{ env.REMOTE_APP_FOLDER }}/${{ env.REMOTE_APP_ENV }}
                      pm2 delete ${{ env.REMOTE_APP_NAME }}_${{ env.REMOTE_APP_ENV }}_${{ env.REMOTE_APP_PORT }}
                      pm2 serve build ${{ env.REMOTE_APP_PORT }} --spa --name ${{ env.REMOTE_APP_NAME }}_${{ env.REMOTE_APP_ENV }}_${{ env.REMOTE_APP_PORT }}
